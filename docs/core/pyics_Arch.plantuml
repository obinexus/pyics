@startuml
!theme mars
title Pyics - Data-Oriented Calendar Automation System\nNon-Monolithic Architecture with Version Isolation

package "Pyics Core Framework" {
    
    package "Version Isolation Layer" {
        package "v1 - Stable" as v1 {
            component [Core Engine] as v1_core
            component [Hook System] as v1_hooks
            component [Distribution] as v1_dist
            component [Authentication] as v1_auth
            component [CLI Interface] as v1_cli
        }
        
        package "v2 - Enhanced" as v2 {
            component [Enhanced Core] as v2_core
            component [Priority Hooks] as v2_hooks
            component [Multi-Channel Dist] as v2_dist
            component [Enterprise Auth] as v2_auth
            component [Telemetry System] as v2_telemetry
            component [Advanced CLI] as v2_cli
        }
        
        package "v3-preview - Experimental" as v3 {
            component [AI Integration] as v3_ai
            component [Blockchain Audit] as v3_blockchain
            component [Real-time Sync] as v3_sync
            component [Migration Tools] as v3_migration
        }
    }
    
    package "Business Logic Layer (Version Agnostic)" {
        component [Audit Engine] as audit
        component [Calendar Factory] as calendar
        component [Notification Engine] as notify
    }
    
    package "Data Flow & Lambda Calculus Layer" {
        component [Function Composition] as compose
        component [Pure Transformations] as transform
        component [Policy Pipeline] as pipeline
        component [State Isolator] as state
    }
    
    package "CLI & IoC Registry" {
        component [Command Router] as router
        component [IoC Container] as ioc
        component [REPL Interface] as repl
        component [Discovery Service] as discovery
    }
}

package "External Integrations" {
    component [SMTP Gateway] as smtp
    component [REST APIs] as rest
    component [File System] as fs
    component [Authentication Providers] as auth_providers
    component [Telemetry Backends] as telemetry_backends
}

package "Distribution Network" {
    node "Business Email" as email
    node "Network Nodes" as nodes
    node "Calendar Clients" as clients
    cloud "Enterprise Systems" as enterprise
}

' Data Flow Relationships
v1_core --> transform : "Data Transforms"
v2_core --> transform : "Enhanced Transforms"
transform --> compose : "Function Composition"
compose --> pipeline : "Policy Application"
pipeline --> state : "State Management"

' Business Logic Connections
audit --> calendar : "Milestone Events"
calendar --> notify : "Distribution Events"
notify --> v1_dist : "v1 Distribution"
notify --> v2_dist : "v2 Distribution"

' CLI Integration
router --> ioc : "Service Resolution"
ioc --> discovery : "Command Discovery"
repl --> router : "Interactive Commands"

' Version Interactions
v1_cli --> router : "Command Registration"
v2_cli --> router : "Enhanced Commands"
v3_migration --> v1_core : "Migration Support"
v3_migration --> v2_core : "Migration Support"

' External Integrations
v1_dist --> smtp : "Email Distribution"
v2_dist --> rest : "API Distribution"
v1_auth --> auth_providers : "Authentication"
v2_auth --> auth_providers : "Enterprise Auth"
v2_telemetry --> telemetry_backends : "Metrics & Traces"

' Distribution Targets
smtp --> email : "ICS Delivery"
rest --> nodes : "Network Distribution"
fs --> clients : "File System Export"
enterprise --> clients : "Enterprise Integration"

' Hook System Flow
v1_hooks --> pipeline : "Pre/Post Hooks"
v2_hooks --> pipeline : "Priority Hooks"
pipeline --> v1_dist : "Hooked Distribution"
pipeline --> v2_dist : "Hooked Distribution"

note right of compose : "Lambda Calculus:\nFunction composition enables\npure transformations without\nside effects or overhead"

note right of pipeline : "Policy-Driven Hooks:\nPre/post processing with\nescalation and retry logic"

note right of state : "Data-Oriented Programming:\nImmutable state transformations\nwith functional composition"

note bottom of v3 : "Experimental Features:\nAI-driven scheduling\nBlockchain audit trails\nReal-time 
synchronization" @enduml
