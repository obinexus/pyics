2025-05-31 17:27:52 [INFO] Starting RIFT single-pass dependency enforcement
2025-05-31 17:27:52 [INFO] Validating environment for linear architecture enforcement...
[0;32m[SUCCESS][0m Environment validation complete
2025-05-31 17:27:52 [INFO] Creating linear-compliant domain structure...
[0;34m[INFO][0m Created domain: protocols - Interface definitions and type contracts
[0;34m[INFO][0m Created domain: routing - Single-pass transformation routing and registry management
[0;34m[INFO][0m Created domain: transformations - Pure transformation functions with linear dependency chains
[0;34m[INFO][0m Created domain: safety - Thread-safety utilities and concurrent execution guards
[0;34m[INFO][0m Created domain: composition - Function composition and lambda calculus operations
[0;34m[INFO][0m Created domain: registry - Global transformation registry with version isolation
[0;34m[INFO][0m Created domain: primitives - Atomic operations - no dependencies allowed
[0;34m[INFO][0m Created domain: validators - Input/output validation ensuring data integrity
[0;32m[SUCCESS][0m Domain structure created with linear architecture compliance
2025-05-31 17:27:52 [INFO] Generating Python module initialization files...
[0;32m[SUCCESS][0m Module initialization files created with RIFT compliance
2025-05-31 17:27:52 [INFO] Creating domain implementation templates...
[0;32m[SUCCESS][0m Domain implementation templates created
2025-05-31 17:27:52 [INFO] Generating dependency validation report...
[0;32m[SUCCESS][0m Dependency validation report generated: dependency_validation_report.md
2025-05-31 17:27:52 [INFO] Creating RIFT architecture test suite...
[0;32m[SUCCESS][0m RIFT test suite created
2025-05-31 17:27:52 [INFO] Linear single-pass architecture successfully enforced
2025-05-31 17:27:52 [INFO] Linear architecture enforcement completed successfully
